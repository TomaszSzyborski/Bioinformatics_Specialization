import sys # you must import "sys" to read from STDIN
import re
# from collections import Counter
# lines = sys.stdin.read().splitlines() # read in the input from STDIN

# substring = lines[0].strip()
# string = lines[1].strip()

##SET_1
# substring = "ATAT"
# string = "GATATATGCATATACTT"
# answer = "1 3 9"

##SET_2
# substring = "TTT"
# string = "AGCGTGCCGAAATATGCCGCCAGACCTGCTGCGGTGGCCTCGCCGACTTCACGGATGCCAAGTGCATAGAGGAAGCGAGCAAAGGTGGTTTCTTTCGCTTTATCCAGCGCGTTAACCACGTTCTGTGCCGACTTT"
# answer = "88 92 98 132"

#SET_4
# substring ='ATA'
# string ='ATATATA'

string ="CTCCGTGGTCCCGATCTCCGTGCGATTCTCCGTGTTTTGCTCCGTGCTCCGTGTGGATGGCCTCCGTGAGCTCCGTGTCTCCGTGTAGGCTCCGTGCTCCGTGCCTCCGTGAACTGCCTCCGTGCTCCGTGCTCCGTGGCATCTCCGTGCTCCGTGGCTCCGTGTGCGTGAGCACTCCGTGATCTCCGTGCTCCGTGCTCCGTGAGCCCTCCGTGCGCTCCGTGGTTTCCTCCGTGCTCCGTGCTCCGTGCTCCGTGCAATTGTTACTCCGTGCATCTCCGTGCTCCGTGTCCTCCGTGCTCCGTGCTCCGTGCCTCCGTGGCCTCCGTGTCTCCGTGTCCGGATTATCTCCGTGCTCCGTGCGCACTCCGTGCTCCGTGGCTCCGTGCTCCGTGGCTCCGTGTTTCTCCGTGCCACTACTCCGTGTCCTCCGTGTCTCCGTGTAGTCTCTCCGTGCCTCCGTGGTCTCCGTGACTCCGTGGCGCTCCGTGACCCGTGGCGCTCCGTGGGCTCCGTGCCCTCCGTGCTCCGTGCCTCCGTGCGCTCCGTGCTCCGTGGCGCTCCGTGACGCCGCCTCCGTGAATAATGGAGGCCTCCGTGGATCTAGGCTCCGTGCACTCCGTGCTCCGTGCGCCTCCGTGTGCTCCGTGCTCCGTGCACGATAGGACTCCGTGCCCTCTCCGTGCTCTCCGTGCTCCGTGCCTCCGTGCTAAAGGCTCCGTGACTCCGTGTTCTCCGTGTTCTCCGTGGTACTCCGTGAACTCCGTGACTACTCCGTGAGCTGTCCTCCGTGCTCCGTGCTCCGTGGTTCTCCGTGAAACGACTCCGTGCTCCGTGACTCCGTGCTCCGTGGGATAAACTCCGTGTGTACTCCGTGTCCTCCGTGCTCCGTGTCCTCCGTGCTCCGTGCGCCAAGTACCCTCCGTGTCTCCGTGACATCTCCGTGGATTGCTCCGTGCGCTCCGTGGTTCTCCGTGCTCCGTGGCGTCGCGCGCTCCGTGGCGCCTCCGTGCTCCGTGACTCCGTGGGTCTCCGTGCGTATCCTCCGTGGCTCCGTGAGTTATCTCCGTGGCGCTCCGTGGGAGGCTCCGTGTCTCCGTGCTCCGTGCTCCGTGTCTCCGTGCTCCGTGCCTCCGTGGCTCCGTGACTCCGTGCTCCGTGTGCTCCGTGCTCCGTGCCTCCGTGATGTACTCCGTGCTCCGTGGCTCCGTGCTCCGTGGATAGTATTTTGGCTCCGTGGAACCTCGCGTGTGACCTCCGTGAATACACTCCGTGAGCGGCGTTTACACGCTCCGTGGCTCCGTGCTCCGTGGCACTCCGTGCTCCGTGCTCCGTGCTGATACTCCGTGCTCCGTGTCAATTCCTCCGTGGACTCCGTGAGCTCCGTGCTCCGTGCCTCTCCGTGCTCCGTGTACAAGAACCCGCCTCCGTGCGCTCCGTGACCCACCTCCGTGCTCCGTGCTCCGTGACTCCGTGAAGGACGTTATTTAAATAGACTCCGTGCTCCGTGCGGCCTCCGTGAGTCTTTCTCCGTGGGCCGGCTCTACTCCGTGCTCCGTGGTAACTCCGTGTATCGCTCCGTGAGCGCCCTCCGTGCCCCTCCGTGTCTCCGTGCTCTCCGTGGGCCTCCGTGGCTCCGTGAAGAGCTCCGTGTGTCTCCGTGCATTACTCCGTGATGTTCTCCGTGATAGACCTCCGTGTGACTCCGTGTATTTCCTCCGTGCGGCCTCCGTGTACTCCGTGCTCCGTGAGACTCCGTGCTCCGTGTCAGCCGCTCCGTGCCCTTATCTCCGTGCTAACTCCGTGCTCCGTGCACGCCCTCCGTGCTCCGTGCCACAACTCCGTGTATTCTCCGTGGCTCCGTGTGCTCCGTGCTCCGTGACTCCGTGCAACTCTCCGTGATCTCCGTGTGGTGATCTGCCTCCGTGTAACGAGCTCCGTGCCTCCGTGCTCCGTGACTCCGTGGCCTGTTCTCCGTGTCTCCGTGACTCCGTGCTCCGTGGTCTCCGTGCTCCGTGACTCCGTGCTCCGTGGGTGCTCCGTGCTCCGTGAGACTCCGTGTTCTCCGTGCTAGGAGGCCTGAAACTCCGTGTTCTCCGTGCTCCGTGCTCCGTGCGCCTCCGTGTCTCCGTGCTCCGTGCTCCGTGAGCCCGCTCCGTGCCGTCAATGCTCCGTGGCTCCGTGGCTCCGTGCTCCGTGCTCCGTGTTGCAACTCCGTGGGTTCTCCGTGACTCCGTGACTTGCTCCGTGAGGGACGCTCCGTGCGCCTCCGTGGTACTCCGTGACTCCGTGCTCACTCCGTGACTCCGTGCTCCGTGTACTCCGTGGCTCCGTGATCTCTCCGTGCTCCGTGTTCCTCCGTGCCTCCGTGCTCCGTGATGTAATGAGCACTCCGTGCTCCGTGCTCCGTGCTCCGTGGCCTCCGTGTAGCTCCGTGCTCCGTGCTCCGTGGACTCCGTGGACCTCCGTGCTCCGTGGCTCCGTGCTCCGTGCTCCGTGCGCTCTCCGTGCATAATAGCCCTCCGTGTCGCCATCTCCGTGCTCCGTGCTCCGTGCTCCGTGGCTCCGTGCTCCGTGCTCCTCGTTTATCTCCGTGTCCCTCCGTGCTCCGTGGTCTCCGTGCTCCGTGGCTGACTCCGTGGCACTCCGTGCTCCGTGCGTGACTCCGTGCTCCGTGCTCCGTGATCAACTCCGTGTGCTCCGTGAGGTTCTCCGAACTCGGTGAATAAACTCCGTGGTGTCTCCGTGCTGGCTCCGTGGGTTCCTCCGTGAGCACTCCGTGCCACACGCTGTCGCTCCGTGAGGGCTTCTGCCTCCGTGACTCCGTGCTCCGTGAATTCTCCGTGCCTCCGTGACCTCCGTGCTCCGTGCTCCGTGCTCCGTGTTATGTCTCCGTGCTCCGTGATCTCCGTGTTCTCCGTGCTCCGTGCTCCGTGCTTTCCTCCGTGCTCCGTGGTTCGCTCCGTGCTCCGTGCTCCGTGAATCTCCGTGAGCTCCGTGGGACCTTCTCCGTGAAGCTCCGTGCCTCCGTGCTCCGTGCTCTCCGTGGTACTCGTAGCTCCGTGTCCAGGTCTCCGTGACGACGCTCCGTGGACTCTCCGTGCGCCCTCTCCGTGGCGTTCCTCCGTGCTGGTAGCTCCGTGTTCCGACTCCGTGGATCTCCGTGTCTCCGTGCTCCGTGACTCCGTGTCTCGATTAACTCCGTGTCAGGAGGAGTACAGGGTTGACCTCCGTGTTCCTCCGTGGTGACCTCCGTGGGCTCCGTGCCAATACTCCGTGATGCCTCCGTGCTCCGTGCTCCGTGCATCCACTCCGTGGCTCCGTGCTCCGTGCTCCGTGTGATTCTCCGTGCTCCGTGCTCCGTGGTGAATCTCCGTGGTGCTCCGTGGTACAGCCTCCGTGTCTCCGTGAACTAACTCCGTGTCTCCGTGCCTCCGTGGTTTCGGCTCCGTGGTCTCCGTGCTCCGTGTTCTCTCCGTGCTCCGTGCTCCGTGTCTCCGTGTCTCCGTGTTCTCCGTGCTAGATGCTCCGTGTCTCCGTGTCTCCGTGCGTTCTCCGTGGGTTAACTCCGTGATTCTGCTCTCCGTGCGCAAGGATTTGAATCTTCATGCACTCCGTGCTCCGTGTCATCTCCGTGCTCCGTGGGACGATCCGATGCTCCGTGACTCCGTGCTCCGTGTCTCCGTGGGCTCCGTGCTCCGTGCTCCGTGTACTCCGTGACCCTCCGTGGCTCCGTGCACTCCGTGCTCCGTGGCTCCGTGGTTCATAAGCCTCCGTGCCCTCCGTGCCTCCTCCGTGAAAGTGCTCCGTGCACTCTCCGTGACTCCGTGTTGCTCCGTGTGCTCCGTGAACCTTGCTCCGTGCAACTCCGTGGCTCCGTGTCTCCGTGGGCGGCTCCGTGCGCCTCCGTGACCTCCGTGGAAAAGTACGCTCCGTGGCCTCCGTGGGCCTCCGTGTCTCCGTGGACCCCCTCCGTGCTCCGTGCCTCCGTGTCCTCCGTGTCTCCGTGACTCCGTGCTCCGTGTATGGCACCCTCCGTGAGTCTCCGTGTCCTCCCTCCGTGACTTTTCTCCGTGTCACTCCGTGACGTATGCTCCACGTAGCGTCCGGCCTCCGTGAACCTCCGTGCTCCGTGTCTCTCCGTGTCTCCGTGACTCCGTGTCTCCGTGTTCCCTCCGTGTCTCCGTGCTCCGTGGCTCCGTGAGCTCCGTGCAGCTCCGTGGCTGCTCCGTGCGCAGACTCCGTGATAAGCTCCGTGCGGCGATGACTCCGTGGCGGCGGTGCTCCGTGCTCCGTGGCTCCGTGTGAATCTTCTCCGTGGCCTCCGTGGGACGCTCCGTGCCTCCGTGAAATCATGTCCTAAGTCTCCGTGCTCCGTGCCCTCCGTGGACTCCGTGTCTCCGTGCTCCGTGAAGGAGCCTTTAGCCTCCGTGGCTCCGTGAACCTACTCTCCGTGCTCCGTGGATAATGTTCCCTCCGTGAAACTCCGTGCCCAGCTCCGTGCATCCTCTCCGTGTCTCCGTGACTCCGTGACCTCCGTGCGACTCCGTGACTCCGTGGCTCCGTGCTCCGTGACAACTTAGCTCCGTGCTCCGTGCTCCGTGTTCTCCGTGCTCCGTGTATTCTCCGTGAAGGAGCTCCGTGACTCCGTGGCTCCGTGACTCCGTGACGACCAGCTCCGTGGTAACTCCGTGTTTTCACAAGCTCCGTGCTCCGTGTCTCCGTGTCCTCCGTGCTCCGTGACTCCGTGACCTCCGTGGCTCCGTGCCCGCTTGACTCCGTGCTCCGTGAACTCCGTGTCCTCCGTGAGGCTCCGTGCTCCGTGTCTCCGTGTCCACCTCCGTGCTCCGTGGCTCCGTGACTCCGTGCTCCGTGCCTCCGTGCTCCGTGATACTCCGTGCTCCGTGGAGCTCCGTGAACTCCGTGTTGATGGTTTACTCCGTGAAGTCTCCGTGTAAAGCAACCACTCCGTGGCACCGCCACTCCTCCGTGCTCCGTGAGACTCCGTGCTCCGTGTCATGGCTCCGTGCTCCGTGCTCCGTGCAAACTCCGTGCTCCGTGAGCTCCGTGGTCTCCGTGCCTCCGTGACTCTCCGTGTACTCCGTGCACTCCGTGTACCTCCGTGCTCCGTGCTCCGTGCCCTCCGTGCTCCGTGCTCCGTGCCCCTCCGTGTGCCTCCGTGCTCCGTGCCTCCGTGCTCCGTGAACTCCGTGTTCCACACTCCGTGTCTCCGTGCGACCTCCGTGGGAACTCCGTGGTCCGGGAGTCCTCCGTGGCCCTCCGTGGCACCTCCGTGCTCCGTGGCTAACCTCCGTGAGCTCTCCGTGTCTCCGTGCGGCTCCGTGACCTCCGTGCTCCGTGGTCAGCGGCTCCGTGGACTCCGTGAGCAAGTATCCTCTCCGTGGGACGGCTTTTCGCGGACTCCGTGAACTCCGTGAGCCCTCCGTGCGCTCCGTGTATCCTCCGTGGACTCCGTGACTGACTCCGTGTTGGATGGACGCATCTCCGTGCTCCGTGCTCCGTGTCACACTCCGTGTCCTCCGTGTCCTCCGTGGCTCCGTGCTCCGTGCTCCGTGTGGCTCCGTGTTCCTCCGTGTTTCTCCGTGACCAGCTCCGTGGACTCCGTGTCTCCTCCGTGGGACTGCTCCGTGCTCCGTGTCCACCCTCCGTGGACCTCCGTGGGACTCCGTGCGTTCTCCGTGTGCCCTCCGTGGTCTCCGTGTGCACTCCGTGCGACTCCGTGCTGCTCCGTGTCGCCTGGCTCTCCGTGATCTCCGTGCTGTAACTCCGTGCTTCTCCGTGCTCCGTGCGCTCCGTGCTCCGTGTCTCCGTGTCTCCGTGCTCCGTGTGGCTCCGTGAACTCCGTGCTATCGCTCCGTGACTCCGTGTCTCCGTGCTCCGTGGCCGCTGGTGCTTCTCCGTGCCCACCTCCGTGCTCCGTGCCTCCGTGGGCTCCGTGCCTCCGTGTGGCGCCTCCGTGCTCTCCGTGCTCCGTGATTCAGCGCCTCCGTGTTCTCCGTGCCTCCGTGTCTGTCTCCGTGGGGACTCCGTGTGCTCCGTGCGCATCTCCGTGCCTCCGTGTTCGCTCCGTGGCTCCGTGCTCCGTGGCGCTCCGTGTTCTCCGTGTACCACTCCGTGACTCCGTGCCTCCGTGTCTCCGTGCTCCGTGCTCCGTGGACTCTCGACTCCGTGTCACTCCGTGACACTCCGTGTGCTCCGTGCTCCGTGAGATTAACTCCTCCGTGGCTCCGTGCTCCGTGCTCCGTGGTCTCCGTGCTCCGTGCCACTCCGTGCGTCTCCGTGTTCTCCGTGCCTCCGTGAACCTCCGTGCGATAAGCTCCGTGGGAACTCCGTGGACTCTCCTCCGTGACGTACTCCGTGCTCCGTGCTCCGTGCCGTCTCCGTGTGACCGCTCCGTGGCTCCGTGTTCTCCGTGTCTCCGTGATTCTCCGTGCACCTCCGTGCCCGACTCTCCGTGCTCCGTGTCTCCGTGGCTCCGTGCTCCGTGCTCCGTGCCCTCCGTGCTCCGTGAAGAGGCTCCGTGGACTCCGTGTCTCCGTGACTACCTCCGTGGCTCCGTGGCTCCGTGCTCCGTGCCTCCGTGGCCTCCGTGATCCTCCGTGGCGACTCCGTGCTCCGTGTCATCGAACTACTCCGTGATGCGCCATCACCCTCCGTGCTCCGTGCTCCGTGTCTCCGTGCTCCGTGACTAATCGCCACTTAACACGAACTCCGTGTTACTCTCCGTGACTCCGTGGCTCCGTGCTTTTACTCCGTGGCCTCCGTGCTCCGTGCTCCGTGACTCCGTGGCTTCTCCGTGCCTATCAGCCTCCGTGGGTCTCCGTGGCTCCGTGTCTCCGTGCTCCGTGCTCCGTGCTCCGTGACCTCCGTGACTCCGTGCCTCCGTGCTCCGTGGGTATATTGGGAACTCCGTGCGGTCTCCGTGCTCCGTGCTCCGTGCTCCGTGATTATACTCCGTGTCCTTCTCCGTGATCTCCGTGGCTCCGTGCTCCGTGCCTCCGTGACTCCGTGGCCACGTTTACGTCTCCGTGAGCTCCGTGCTCCGTGCTCCGTGCACTCCGTGGGCTCCTCCGTGACCCTTTTTCTCTCCGTGAACTCCGTGTTCTCCGTGAACTCCGTGAGCGCTCCGTGTCTCCGTGCTCCGTGTTTCCTCCGTGCGCCTTAGCTCCGTGTTTGATCGCTCCGTGTGGGAGACCTCCGTGCACTCCGTGGGGCTCCGTGCCTCCGTGGCTCCGTGACTCCGTGCCGGCTCCGTGCTCCGTGCCTCCGTGTCCCCTCCGTGCCTCCGTGCCTCCGTGAGGTACTCCGTGCGCTCCGTGCACTCCGTGCTCCGTGCTCTCTCCGTGCTCCGTGGCAGTCCCTCCGTGGCTCCGTGCTCCGTGTCATTTCTCCGTGCCACTCCGTGCGACCTCCGTGTCTCCGTGGCCTCCGTGGCTAGCTCCGTGCTCCGTGACTCCGTGCACCTCCGTGCTTCAGGCCTCCGTGGTCGCTCCGTGGGCTCCGTGGTCTCCGTGCCTCCGTGCTCCGTGGCTGTATCTCCGTGTCTTACTCCGTGCTCCGTGGTCTCCGTGCACCTCCGTGCTCCGTGCGAGCACTCCGTGACGCTACTCCGTGAGGGGCGCTCCGTGACTTTCCTCCGTGAACTCCGTGCTCCGTGGACTCCGTGCTCCGTGGTACCTCCGTGAGCTTAGATAGCTCCGTGCTCCGTGACTCCGTGGCCTCTCCGTGCGTACACCTTCTGCTCCGTGATCTCCGTGTACTCCGTGCCTCCGTGGTGCTCCGTGCTCCGTGACGTCTCCGTGCACTCCGTGAGACCTCCGTGGCCTCCGTGCCCCATTCTCCGTGCTCCGTGCACCCTCCGTGGAGCTCCGTGACCTCCGTGCTCCGTGATCTCCGTGGACTCCGTGCTCCGTGATCTCCGTGCTCAATCTCCGTGGTCTCCGTGACTCCGTGTCTCCGTGTTACTCCGTGGCTCCGTGACTCCGTGAGCTAACCCACGCTCCGTGACTCCGTGAAGCAGCTCCGTGCTCCGTGTCTCCGTGGGCCACTCCGTGACTCCGTGGAGCTCCGTGCCTCCGTGAATCTCCGTGCCCTCCGTGCCTCCGTGACTCCGTGGCTCCGTGCTCCGTGACACTCCGTGCTCCGTGAGAGATCGTCTCCGTGACACTCCGTGTTCTCCGTGTCTCCGTGCCACTCCGTGGGCTCCGTGCTCCGTGCGTCTCCGTGCGACCATCATGCCTCCGTGCTCCGTGGCCTCCGTGCTCCGTGCTCCGTGCTTACTCCGTGGCTCCGTGTCTCCGTGCCTCCGTGACTCCGTGTACGTGACTCCGTGACTCCGTGTCCCTCCGTGCCGGATCGGGAGGTACACTCCGTGCACTCCGTGACCTCCGTGCTCCGTGACTCCGTGCGCTCCGTGCCTCTCCGTGCTCCGTGACCTCTCCTCCGTGTTGATTGCTCCGTGCTCCGTGCTCCGTGTGCCTCCGTGCTCCGTGCTCCGTGCCTCCGTGTCCTCCGTGTCTCCGTGGAGTATTGCTCCGTGCTGTGGAGACTCCGTGCCCTCCGTGCTCCGTGGCTCCGTGCTCCGTGCTCCGTGATGACTCCGTGCTCCGTGCTCCGTGCTCCGTGGGCTGGCTCCGTGCTCCGTGTCTCCGTGCTCCGTGGGGCTCCGTGTTCCTCCGTGATTCGACAGCGCTCCGTGGCTCCGTGCACTCCGTGCGTCTCTTTCTCCGTGCTCCGTGCTGCTCCGTGGACTCCGTGACTCCTCCGTGCTCCGTGCTCCGTGACTCCGTGCTCCGTGCTCCGTGGTAACTTCCCTCCGTGCGCTCCGTGTTACCTCCGTGCTCCGTGCGCGCTCCGTGCTCCGTGTGCTCCGTGCTCCGTGCGATCATGCTTTATCTACACCTCCGTGCCTCCGTGCTCCGTGCGTCCTCCTCCGTGACTCTCCGTGCTCCGTGGCTCTCCGTGCGGCCTCCGTGACTCCGTGAAGCTCTCCGTGATCTCCGTGGCGGCCTTCCTCCGTGCCTATCTCCGTGTCCCAATTCTCCGTGTCTCCGTGCACGGTACTCCGTGACTCCGTGGTGCTCCGTGTCTCCGTGGCTCCGTGGCCCCTCCGTGCCTCCGTGCTCCGTGATGCCTCCGTGCTCCGTGGTTCCTCCGTGTCTCCGTGTGGCTCCGTGCTCCGTGGAACTCCGTGATCTCCGTGTTCCGGGGGCCCTTATACCTCCGTGCTCCGTGTGGGAAGGCCATCTCCGTGTTTTGCAACTCCGTGAGTCCCCTCCGTGAGCTCCGTGGGTCTCCGTGGCTTCATGCAGCTCCGTGCCCTCCGTGTGGGTCTCCGTGCACTCTCCGTGCGCTCCGTGACTCCGTGTCCTCCGTGGCCATCGCTCCGTGGATGTCTCCGTGGCTCCGTGCTCCGTGAGTCCTCCGTGCTCCGTGTCTCCGTGGTTCTCCGTGCTCCGTGCTCCGTGAAGCTCCGTGCTCTACTCCGTGGCACTTGCTCCGTGCTCCGTGGTACTCCGTGGCTCCGTGGCTCCGTGCTCCGTGGACTCCGTGTGGCTCCGTGGTCTCCGTGAGCTCCGTGAATCTCTCCGTGTCTCCGTGTGTAAACTCCGTGCTCCGTGTTACTCCGTGTCGCCTCCGTGCCTCCGTGGTACTCCGTGTACTCCGTGTCTCCGTGTCTCCGTGCTCCGTGCTCCGTGCTCCGTGGCCTCCGTGTCCGTTCTCCGTGTGGCTCCGTGAAGGACTCCGTGCCCTCCGTGGCTCCGTGTACCTCCGTGCTCCGTGCTCCGTGCTCCGTGCTCCGTGCTCCGTGCTCCGTGAAATTAGCTCCGTGCCGAACTCCGTGAACTCTCCGTGGCGGCTCCGTGCATCACTCCGTG"
substring = "CTCCGTGCT"

string = "ATGACTTCGCTGTTACGCGC"
substring = "CGC"
def sliding_string_window(string, substring):
	list_of_substring_indexes = []
	for i in range(len(string)-len(substring)+1):
		if string[i:i+len(substring)] == substring:
			list_of_substring_indexes.append(i)
	return list_of_substring_indexes

normal = sliding_string_window(string, substring)
# rev = sliding_string_window(string, substring[::-1])

#print(normal)
# print(rev)
print(' '.join(map(str, normal)).strip() +"\n")
